<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <ProjectGuid>{f0174391-4b17-4d97-a47c-1fc80af79503}</ProjectGuid>
    <RootNamespace>AutomationUser</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v142</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>$(SolutionDir)target\$(Configuration)\</OutDir>
    <TargetName>AUCred</TargetName>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>$(SolutionDir)target\$(Configuration)\</OutDir>
    <TargetName>AUCred</TargetName>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32_LEAN_AND_MEAN;_WINDOWS;AUTOMATION_USER_EXPORTS;%(PreprocessorDefinitions);_DEBUG</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>$(SolutionDir)AutomationUser\;$(SolutionDir)target\dependencies\boost\;$(SolutionDir)target\dependencies\crypto\;$(SolutionDir)HawkeyeCore\Core\</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalLibraryDirectories>$(SolutionDir)target\dependencies\boost\stage\lib;$(SolutionDir)target\dependencies\crypto\x64\Output\$(Configuration)</AdditionalLibraryDirectories>
      <AdditionalDependencies>cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>if not exist \Instrument\Software\ goto build_success

if not exist "$(Outdir)$(TargetFileName)" goto no_core_dll
copy /Y "$(Outdir)$(TargetFileName)" \Instrument\Software\

if exist "$(Outdir)$(TargetName).pdb" copy /Y "$(Outdir)$(TargetName).pdb" \Instrument\Software\

:build_success
echo BUILD SUCCESS!
goto done_xit

:no_core_dll
echo BUILD ERROR: core output dll file not found! "$(TargetFileName)"
goto done_xit


:done_xit
</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist "$(Outdir)$(TargetName).*" del /Q /F "$(Outdir)$(TargetName).*"

if not exist \Instrument\Software goto xit
if exist \Instrument\Software\$(TargetName).* del /Q /F \Instrument\Software\$(TargetName).*

:xit
</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <SDLCheck>true</SDLCheck>
      <PreprocessorDefinitions>WIN32_LEAN_AND_MEAN;_WINDOWS;AUTOMATION_USER_EXPORTS;%(PreprocessorDefinitions);NDEBUG</PreprocessorDefinitions>
      <ConformanceMode>true</ConformanceMode>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <AdditionalIncludeDirectories>$(SolutionDir)AutomationUser\;$(SolutionDir)target\dependencies\boost\;$(SolutionDir)target\dependencies\crypto\;$(SolutionDir)HawkeyeCore\Core\</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <EnableUAC>false</EnableUAC>
      <AdditionalLibraryDirectories>$(SolutionDir)target\dependencies\boost\stage\lib;$(SolutionDir)target\dependencies\crypto\x64\Output\$(Configuration)</AdditionalLibraryDirectories>
      <AdditionalDependencies>cryptlib.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ProgramDatabaseFile />
    </Link>
    <PostBuildEvent>
      <Command>if not exist \Instrument\Software\ goto build_success

if not exist "$(Outdir)$(TargetFileName)" goto no_core_dll
copy /Y "$(Outdir)$(TargetFileName)" \Instrument\Software\

if exist "$(Outdir)$(TargetName).pdb" copy /Y "$(Outdir)$(TargetName).pdb" \Instrument\Software\

:build_success
echo BUILD SUCCESS!
goto done_xit

:no_core_dll
echo BUILD ERROR: core output dll file not found! "$(TargetFileName)"
goto done_xit


:done_xit
</Command>
    </PostBuildEvent>
    <PreBuildEvent>
      <Command>if exist "$(Outdir)$(TargetName).*" del /Q /F "$(Outdir)$(TargetName).*"

if not exist \Instrument\Software goto xit
if exist \Instrument\Software\$(TargetName).* del /Q /F \Instrument\Software\$(TargetName).*

:xit

</Command>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\HawkeyeCore\Core\ChronoUtilities.hpp" />
    <ClInclude Include="..\HawkeyeCore\Core\ExpandedUsers.hpp" />
    <ClInclude Include="..\HawkeyeCore\Core\SecurityHelpers.hpp" />
    <ClInclude Include="AutomationUser.hpp" />
    <ClInclude Include="DLLVersion.hpp" />
    <ClInclude Include="stdafx.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\HawkeyeCore\Core\ChronoUtilities.cpp" />
    <ClCompile Include="..\HawkeyeCore\Core\SecurityHelpers.cpp" />
    <ClCompile Include="AutomationUser.cpp" />
    <ClCompile Include="dllmain.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="$(SolutionDir)target\properties\AutomationUser\AutomationUser.rc" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>